## ***** Menu CPU ************************************************************
## * Programa de inicializacao do projeto BASPRO: CPU
## * cria um menu em SCREEN IV com a relacao de todos os programas disponiveis
## *


## ***** Declaracoes de Variaveis usadas pelo programa ***********************
declare contadori, contadore, temp, auxiliar, tecla
declare cursor, topomenu, opcoes, comando, descricao, parametro, extensao
declare maxopcao, bottonmenu, limite, help

## ***** Definicoes/Macros usadas pelo programa ******************************
define [waitkey] [aa$=inkey$:if aa$="" then {@}]
define [clrbuffer] [aa$=inkey$:if aa$<>"" then {@}]
define [debug][locate 0,4:print "debug: ";[0]:aa$=input$(1)]
define [endbasic][&HBFFF]
define [stringspace][2000]
define [asmfile]["program.bin"]
define [blkx][poke &Hc000,[0]]
define [blky][poke &Hc001,[0]]
define [blkw][poke &Hc002,[0]]
define [blkh][poke &Hc003,[0]]
define [blkc][poke &Hc004,[0]]
define [slen][poke &hc005,[0]]
define [lalfa][peek (&Hc000)]
define [halfa][peek (&Hc001)]
define [lralfa][&HBF]
define [hralfa][&H1B]
define [SCRNIV][temp=usr(0)]
define [CPALPH][temp=usr(1)]
define [DSKTOP][temp=usr(2)]
define [COLORS][temp=usr(3)]
define [FBLOK][temp=usr(4)]
define [WINDS][temp$=usr3([0])]
define [cESC][if asc(aa$) = 27 then]
define [cENTER][if asc(aa$) = 13 then]
define [cDOWN][if asc(aa$) = 31 then]
define [cUP][if asc(aa$) = 30 then]

## ***** Programa Principal **************************************************
goto {carrega_fonte}
{main}
    defint a-z:
    gosub {desktop}:
    gosub {carrega_menu}:
    gosub {carrega_help}:
    gosub {show_menu}:
    gosub {menu}:
    gosub {descarrega_fonte}:
    end
{teste}



## ***** Menu Principal ******************************************************
## *
{menu}
    gosub {opcao_corrente}:
    gosub {help}
    [clrbuffer]
    [waitkey]
    gosub {limpa_opcao}:
    [cDOWN] cursor +=1:
        if cursor > limite then cursor = limite
    [cUP] cursor -=1:
        if cursor < 1 then cursor = 1
    [cESC] return
    [cENTER] gosub {processa_menu}
    goto {menu}


## ***** Processa a opcao escolhida pelo menu ********************************
## *
{processa_menu}
    if comando$(cursor) = "bas" _
        then _
        temp$ = parametro$(cursor) + "." + extensao$(cursor):
        run $temp
    if comando$(cursor) = "com" _
        then _
        gosub {comandos}
    return


## ***** Processa comandos disponiveis pelo menu *****************************
## *
{comandos}
    gosub {trim_lower}
    [debug]cursor
    [debug]temp$
    if temp$ = "files" _
        then _
        [debug]"Saida":
        files parametro$(cursor)
    [waitkey]
    return

{trim_lower}
    temp$=""
    for contadori=1 to len(descricao$(cursor)):
        temp$=mid$(descricao$(cursor),contadori,1):
        temp=asc$(temp$):
        if (temp <=65) and (temp <= 97) then temp = temp - 65 + 97
        if temp <> 32 then temp$ = temp$ + chr$(temp)
    next contadori:
    return

## ***** Mostra HELP da opcao selecionada ************************************
## *
{help}
    for contadori=1 to 17:
        locate 14,2+contadori:
        print help$(cursor,contadori):
    next contadori:
    return


## ***** Carrega a Fonte em Disco, formato Graphos III **********************
## * Esta rotina carrega um alfabeto do Graphos III para a RAM e o usa como
## * novo banco de caracteres, permitindo inclusive a troca de SCREEN sem
## * perda da definicao. So funciona em MSX-DOS
## * &H3A00: A fonte do graphos fica em #9200, porem nosso programa a usa em
## *         #CC00, por isso precisamos carregar a mesma com este offset
## * &HF91F: SlotID onde a nova fonte vai ser instalada (RAM), busca o dado
## *         na area de systema do MSX-DOS (RAM Page 2 DOS/BASIC)
## * &HF920: Endereco do banco de caracteres, em nosso caso &HCC00
## *
{carrega_fonte}
    clear 2000, &Hbfff:
    bload [asmfile], r:
    poke &Hf91f, peek(&hf341+3):
    poke &Hf920, [lalfa]:
    poke &Hf921, [halfa]:
    goto {main}

{descarrega_fonte}
    poke &Hf91f, 0:
    poke &Hf920, [lralfa]:
    poke &Hf921, [hralfa]:
    screen 0:
    width 40:
    key off:
    color 15,1,1:
    return


## ***** Carrega as opcoes e prepara o menu ajustando a quantidade de itens **
## * Verifica todos os DATA da primeira parte ate encontrar o @@
{carrega_menu}
    opcoes = 0:
    restore {data_menu}
    read temp$, temp$, temp$, temp$:
    if temp$ <> "@@" then _
        opcoes += 1:
        goto {@}
    dim comando$(opcoes):
    dim descricao$(opcoes):
    dim parametro$(opcoes):
    dim extensao$(opcoes):

    restore {data_menu}:
    for contadori=1 to opcoes:
        read comando$(contadori):
        read descricao$(contadori):
        read parametro$(contadori):
        read extensao$(contadori):
    next contadori
    maxopcao = opcoes:
    bottonmenu = 18:
    topomenu = 1:
    cursor = 1:
    if maxopcao>bottonmenu then _
        limite=bottonmenu _
    else _
        limite=maxopcao
    return

## ***** Mostra o menu de opcoes *********************************************
## * 
{show_menu}
    for contadori=1 to limite:
        locate 2,2+contadori:
        print parametro$(contadori):
    next contadori:
    return

## ***** Mostra opcao corrente ***********************************************
## *
{opcao_corrente}
    temp$="":
    for contadori=1 to 9:
        temp$=temp$+chr$(asc(mid$(parametro$(cursor),contadori,1))+96):
    next contadori:
    locate 2,2+cursor:
    print temp$:
    return

## ***** Desmarca opcao corrente *********************************************
## *
{limpa_opcao}
    locate 2,2+cursor:
    print parametro$(cursor):
    return


## ***** DESKTOP, pinta a Area de Desktop Inicial ****************************
## * Usa a rotina em Assembly SCRNIV / USR(0)
## * Colca o VDP em SCREEN 2 e o sistema em SCREEN 1, fazendo o modo
## * mixado entre a SCREEN 1 e 2, permitindo 16 cores por caractere nas
## * caracteristicas da SCREEN 1 em modo texto e nao grafico
## *
## * Usa a rotina em Assembly CPALPH / USR(1)
## * Chama a SCREEN 2 para preparar as tabelas na VRAM. Em seguida faz o
## * mesmo com a SCREEN 1. Depois chama a rotina SETGRP da BIOS. Esta
## * rotina muda o VDP para operar no formato da SCREEN 1, porem deixando
## * o BASIC em SCREEN 1. Para funcionar corretamente precisa que se copie
## * o banco de caracteres para os 3 tercos da tela, a partir disso, opera
## * como SCREEN 1
## *
## * Usa rotina em Assembly DSKTOP / USR(2)
## * E apenas uma chamada a FILVRM com o caractere 0, que e o padrao de
## * preenchimento no alfabeto
## *
## * Usa a rotina em Assembly FBLOK / USR(4)
## * Preenche um bloco nao contiguo na VRAM com um caractere
{desktop}
    [SCRNIV]:
    [CPALPH]:
    [blkc]&H00:[DSKTOP]:
    [COLORS]:
    [blkx]1:[blky]2:[blkw]11:[blkh]20:[blkc]32:[FBLOK]:
    [blkx]13:[blky]2:[blkw]18:[blkh]20:[blkc]32:[FBLOK]
    [blkx]1:[blky]2:[blkw]11:[blkh]20:[blkc]32:[WINDS]"Menu":
    [blkx]13:[blky]2:[blkw]18:[blkh]20:[blkc]32:[WINDS]"Info":
    return



## ***** Dados do Menu *******************************************************
## Dados das opcoes e dos programas para criacao do menu de programas
{data_menu}
    data com,Files           ,*.*      ,@, _
         bas,HyperCopy       ,Tap2Dsk  ,bas, _
         bas,Gerador de Som  ,eSound   ,bas, _
         bas,Slots L0        ,Slot-1B  ,bas, _
         bas,Slots L5        ,Slot-2B  ,bas
    data bas,K7 L1           ,Txt2Cas  ,bas, _
         bas,K7 L2           ,Cas2Txt  ,bas, _
         bas,Exemplo SCR2    ,Men-1    ,bas, _
         bas,Menu SCR2       ,MeSC2    ,bas, _
         bas,Jawbreaker      ,JawBrk   ,bas
    data bas,Musica Rand.    ,aRndMus  ,bas, _
         bas,Auf W.Monty     ,Monty    ,bas, _
         bas,Zanac           ,Zanac    ,bas, _
         bas,Abu S.Profanati.,Profran  ,bas, _
         bas,Galaga          ,Galaga   ,bas
    data bas,Bounder         ,Bounder  ,bas, _
         bas,Automato Cel.   ,Celula   ,bas, _
         @@@,@@              ,@@       ,@@


## ***** Dados de Ajuda de cada Programa *************************************
{carrega_help}
    dim help$(maxopcao,17):
    for contadore=1 to maxopcao:
        for contadori=1 to 17:
            help$(contadore,contadori) = "                ":
        next contadori:
    next contadore
    help$(1,1)        = "FILES           ":
        help$(1,2)    = "=====           ":
        help$(1,4)    = "Mostra o direto-":
        help$(1,5)    = "rio do disco.   ":
    help$(2,1)        = "HyperCopy       ":
        help$(2,2)    = "=========       ":
        help$(2,4)    = "Copia programas "
        help$(2,5)    = "entre fita e    ":
        help$(2,6)    = "disco.          ":
        help$(2,7)    = "O programa le os":
        help$(2,8)    = "dados do cabeca-":
        help$(2,9)    = "lho e monta li- ":
        help$(2,10)   = "nhas BASIC com  ":
        help$(2,11)   = "os comandos para"
        help$(2,12)   = "realizar a copia":
        help$(2,13)   = "Basta posicionar":
        help$(2,14)   = "o cursor e dar  ":
        help$(2,15)   = "<ENTER>.        ":
    help$(3,1)        = "Editor de Som   ":
        help$(3,2)    = "=============   ":
        help$(3,4)    = "Simples editor  "
        help$(3,5)    = "de sons.        ":
        help$(3,7)    = "Usa o comando   ":
        help$(3,8)    = "SOUND do MSX-   ":
        help$(3,9)    = "BASIC.          ":
        help$(3,10)   = "Can.A  freq,vol ":
        help$(3,11)   = "Can.B/C freq,vol":
        help$(3,12)   = "Outros auto-    "
        help$(3,13)   = "explicativos    ":
    help$(4,1)        = "Slot e Expansao ":
        help$(4,2)    = "=============== ":
        help$(4,4)    = "Identifica a pa-":
        help$(4,5)    = "ginacao do MSX  ":
        help$(4,7)    = "Mostra cada pa- ":
        help$(4,8)    = "gina ativa no   "
        help$(4,9)    = "seu slot.       ":
    help$(5,1)        = "Slot e Expansao ":
        help$(5,2)    = "=============== ":
        help$(5,4)    = "Program exemplo ":
        help$(5,5)    = "com todas as ro-":
        help$(5,6)    = "tinas do artigo ":
    help$(6,1)        = "Sistema Cassete "
        help$(6,2)    = "=============== ":
        help$(6,4)    = "Exemplo que gra-":
        help$(6,5)    = "va uma mensagem ":
        help$(6,6)    = "de texto na fita":
        help$(6,6)    = "K7.             ":
    help$(7,1)        = "Sistema Cassete ":
        help$(7,2)    = "=============== "
        help$(7,4)    = "Exemplo que le  ":
        help$(7,5)    = "uma mensagem de ":
        help$(7,6)    = "texto da fita K7":
    help$(8,1)        = "Menu SCREEN 2   ":
        help$(8,2)    = "=============   ":
        help$(8,4)    = "Exemplo inicial ":
        help$(8,5)    = "de janela na    "
        help$(8,6)    = "SCREEN 2        ":
    help$(9,1)        = "Menu SCREEN 2   ":
        help$(9,2)    = "=============   ":
        help$(9,4)    = "Exemplos das    ":
        help$(9,5)    = "rotinas de cria-":
        help$(9,6)    = "cao de janelas  ":
        help$(9,7)    = "na SCREEN 2.    "
        help$(9,9)    = "A rotina esta   ":
        help$(9,10)   = "incluida no pro-":
        help$(9,11)   = "prioexemplo.    ":
    help$(10,1)       = "Jawbreake       ":
        help$(10,2)   = "=========       ":
        help$(10,4)   = "Jogo baseado no ":
        help$(10,5)   = "Pac-Man.        "
        help$(10,7)   = "Comer as vita-  ":
        help$(10,8)   = "minas para ga-  ":
        help$(10,9)   = "nhar pontos.    ":
        help$(10,11)  = "Cuidado com os  ":
        help$(10,12)  = "Guardioes.      ":
        help$(10,14)  = "Vitaminas espe- ":
        help$(10,15)  = "cias aparecem   "
        help$(10,16)  = "as vezes no     ":
        help$(10,17)  = "Centro.         ":
    help$(11,1)       = "Musica Aleatoria":
        help$(11,2)   = "================":
        help$(11,4)   = "Programa de cri-":
        help$(11,5)   = "acao de musica  ":
        help$(11,6)   = "aleatoria pelo  "
        help$(11,7)   = "MSX.            ":
        help$(11,9)   = "Parte do livro  ":
        help$(11,10)  = "100 Dicas para o":
        help$(11,11)   = "MSX.           ":
    help$(12,1)       = "Auf W.Monty     ":
        help$(12,2)   = "===========     ":
        help$(12,4)   = "Jogo Auf        "
        help$(12,5)   = "Wiedersehen     ":
        help$(12,6)   = "Monty           ":
        help$(12,8)   = "Vidas Infinitas ":
    help$(13,1)       = "Zanac           ":
        help$(13,2)   = "=====           ":
        help$(13,4)   = "Jogo Zanac      ":
        help$(13,6)   = "Vidas Infinitas "
    help$(14,1)       = "Abu S.Profan.   ":
        help$(14,2)   = "=============   ":
        help$(14,4)   = "Jogo Abu        ":
        help$(14,5)   = "Simbel          ":
        help$(14,6)   = "Profanation     ":
        help$(14,8)   = "Vidas Infinitas ":
    help$(15,1)       = "Galaga          "
        help$(15,2)   = "======          ":
        help$(15,4)   = "Jogo Galga      ":
        help$(15,6)   = "Vidas Infinitas ":
    help$(16,1)       = "Bounder         ":
        help$(16,2)   = "=======         ":
        help$(16,4)   = "Jogo Bounder    ":
        help$(16,6)   = "Vidas Infinitas "
    help$(17,1)       = "Celular         ":
        help$(17,2)   = "=======         ":
        help$(17,4)   = "Programa auto-  ":
        help$(17,5)   = "nome celular.   ":
        help$(17,7)   = "Versao do pro-  ":
        help$(17,8)   = "grama LIFE para ":
        help$(17,9)   = "o MSX.          "
        help$(17,10)  = "Informe o padrao":
        help$(17,11)  = "com letras A a P":
        help$(17,13)  = "O resto das per-":
        help$(17,14)  = "guntas e respon-":
        help$(17,15)  = "dida com 0 ou 1 ":
        help$(17,16)  = "e determinam as ":
        help$(17,17)  = "influencias.    "
    return